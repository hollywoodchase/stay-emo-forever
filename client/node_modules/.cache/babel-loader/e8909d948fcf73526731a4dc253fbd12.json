{"ast":null,"code":"//! moment.js\n//! version : 2.8.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n(function (undefined) {\n  /************************************\n      Constants\n  ************************************/\n  var moment,\n      VERSION = '2.8.4',\n      // the global-scope this is NOT the global object in Node.js\n  globalScope = typeof global !== 'undefined' ? global : this,\n      oldGlobalMoment,\n      round = Math.round,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      i,\n      YEAR = 0,\n      MONTH = 1,\n      DATE = 2,\n      HOUR = 3,\n      MINUTE = 4,\n      SECOND = 5,\n      MILLISECOND = 6,\n      // internal storage for locale config files\n  locales = {},\n      // extra moment internal properties (plugins register props here)\n  momentProperties = [],\n      // check for nodeJS\n  hasModule = typeof module !== 'undefined' && module && module.exports,\n      // ASP.NET json date format regex\n  aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n      aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n      // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n      // format tokens\n  formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n      localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n      // parsing token regexes\n  parseTokenOneOrTwoDigits = /\\d\\d?/,\n      // 0 - 99\n  parseTokenOneToThreeDigits = /\\d{1,3}/,\n      // 0 - 999\n  parseTokenOneToFourDigits = /\\d{1,4}/,\n      // 0 - 9999\n  parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/,\n      // -999,999 - 999,999\n  parseTokenDigits = /\\d+/,\n      // nonzero number of digits\n  parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,\n      // any word (or two) characters or numbers including two/three word month in arabic.\n  parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi,\n      // +00:00 -00:00 +0000 -0000 or Z\n  parseTokenT = /T/i,\n      // T (ISO separator)\n  parseTokenOffsetMs = /[\\+\\-]?\\d+/,\n      // 1234567890123\n  parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/,\n      // 123456789 123456789.123\n  //strict parsing regexes\n  parseTokenOneDigit = /\\d/,\n      // 0 - 9\n  parseTokenTwoDigits = /\\d\\d/,\n      // 00 - 99\n  parseTokenThreeDigits = /\\d{3}/,\n      // 000 - 999\n  parseTokenFourDigits = /\\d{4}/,\n      // 0000 - 9999\n  parseTokenSixDigits = /[+-]?\\d{6}/,\n      // -999,999 - 999,999\n  parseTokenSignedNumber = /[+-]?\\d+/,\n      // -inf - inf\n  // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n  isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n      isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n      isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/], ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/], ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d{2}/], ['YYYY-DDD', /\\d{4}-\\d{3}/]],\n      // iso time formats and regexes\n  isoTimes = [['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /(T| )\\d\\d:\\d\\d/], ['HH', /(T| )\\d\\d/]],\n      // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-15', '30']\n  parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n      // getter and setter names\n  proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n      unitMillisecondFactors = {\n    'Milliseconds': 1,\n    'Seconds': 1e3,\n    'Minutes': 6e4,\n    'Hours': 36e5,\n    'Days': 864e5,\n    'Months': 2592e6,\n    'Years': 31536e6\n  },\n      unitAliases = {\n    ms: 'millisecond',\n    s: 'second',\n    m: 'minute',\n    h: 'hour',\n    d: 'day',\n    D: 'date',\n    w: 'week',\n    W: 'isoWeek',\n    M: 'month',\n    Q: 'quarter',\n    y: 'year',\n    DDD: 'dayOfYear',\n    e: 'weekday',\n    E: 'isoWeekday',\n    gg: 'weekYear',\n    GG: 'isoWeekYear'\n  },\n      camelFunctions = {\n    dayofyear: 'dayOfYear',\n    isoweekday: 'isoWeekday',\n    isoweek: 'isoWeek',\n    weekyear: 'weekYear',\n    isoweekyear: 'isoWeekYear'\n  },\n      // format function strings\n  formatFunctions = {},\n      // default relative time thresholds\n  relativeTimeThresholds = {\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  },\n      // tokens to ordinalize and pad\n  ordinalizeTokens = 'DDD w W M D d'.split(' '),\n      paddedTokens = 'M D H h m s w W'.split(' '),\n      formatTokenFunctions = {\n    M: function M() {\n      return this.month() + 1;\n    },\n    MMM: function MMM(format) {\n      return this.localeData().monthsShort(this, format);\n    },\n    MMMM: function MMMM(format) {\n      return this.localeData().months(this, format);\n    },\n    D: function D() {\n      return this.date();\n    },\n    DDD: function DDD() {\n      return this.dayOfYear();\n    },\n    d: function d() {\n      return this.day();\n    },\n    dd: function dd(format) {\n      return this.localeData().weekdaysMin(this, format);\n    },\n    ddd: function ddd(format) {\n      return this.localeData().weekdaysShort(this, format);\n    },\n    dddd: function dddd(format) {\n      return this.localeData().weekdays(this, format);\n    },\n    w: function w() {\n      return this.week();\n    },\n    W: function W() {\n      return this.isoWeek();\n    },\n    YY: function YY() {\n      return leftZeroFill(this.year() % 100, 2);\n    },\n    YYYY: function YYYY() {\n      return leftZeroFill(this.year(), 4);\n    },\n    YYYYY: function YYYYY() {\n      return leftZeroFill(this.year(), 5);\n    },\n    YYYYYY: function YYYYYY() {\n      var y = this.year(),\n          sign = y >= 0 ? '+' : '-';\n      return sign + leftZeroFill(Math.abs(y), 6);\n    },\n    gg: function gg() {\n      return leftZeroFill(this.weekYear() % 100, 2);\n    },\n    gggg: function gggg() {\n      return leftZeroFill(this.weekYear(), 4);\n    },\n    ggggg: function ggggg() {\n      return leftZeroFill(this.weekYear(), 5);\n    },\n    GG: function GG() {\n      return leftZeroFill(this.isoWeekYear() % 100, 2);\n    },\n    GGGG: function GGGG() {\n      return leftZeroFill(this.isoWeekYear(), 4);\n    },\n    GGGGG: function GGGGG() {\n      return leftZeroFill(this.isoWeekYear(), 5);\n    },\n    e: function e() {\n      return this.weekday();\n    },\n    E: function E() {\n      return this.isoWeekday();\n    },\n    a: function a() {\n      return this.localeData().meridiem(this.hours(), this.minutes(), true);\n    },\n    A: function A() {\n      return this.localeData().meridiem(this.hours(), this.minutes(), false);\n    },\n    H: function H() {\n      return this.hours();\n    },\n    h: function h() {\n      return this.hours() % 12 || 12;\n    },\n    m: function m() {\n      return this.minutes();\n    },\n    s: function s() {\n      return this.seconds();\n    },\n    S: function S() {\n      return toInt(this.milliseconds() / 100);\n    },\n    SS: function SS() {\n      return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n    },\n    SSS: function SSS() {\n      return leftZeroFill(this.milliseconds(), 3);\n    },\n    SSSS: function SSSS() {\n      return leftZeroFill(this.milliseconds(), 3);\n    },\n    Z: function Z() {\n      var a = -this.zone(),\n          b = '+';\n\n      if (a < 0) {\n        a = -a;\n        b = '-';\n      }\n\n      return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n    },\n    ZZ: function ZZ() {\n      var a = -this.zone(),\n          b = '+';\n\n      if (a < 0) {\n        a = -a;\n        b = '-';\n      }\n\n      return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n    },\n    z: function z() {\n      return this.zoneAbbr();\n    },\n    zz: function zz() {\n      return this.zoneName();\n    },\n    x: function x() {\n      return this.valueOf();\n    },\n    X: function X() {\n      return this.unix();\n    },\n    Q: function Q() {\n      return this.quarter();\n    }\n  },\n      deprecations = {},\n      lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin']; // Pick the first defined of two or three arguments. dfl comes from\n  // default.\n\n  function dfl(a, b, c) {\n    switch (arguments.length) {\n      case 2:\n        return a != null ? a : b;\n\n      case 3:\n        return a != null ? a : b != null ? b : c;\n\n      default:\n        throw new Error('Implement me');\n    }\n  }\n\n  function hasOwnProp(a, b) {\n    return hasOwnProperty.call(a, b);\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object, and es5 standard is not very\n    // helpful.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false\n    };\n  }\n\n  function printMsg(msg) {\n    if (moment.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (firstTime) {\n        printMsg(msg);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  function deprecateSimple(name, msg) {\n    if (!deprecations[name]) {\n      printMsg(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  function padToken(func, count) {\n    return function (a) {\n      return leftZeroFill(func.call(this, a), count);\n    };\n  }\n\n  function ordinalizeToken(func, period) {\n    return function (a) {\n      return this.localeData().ordinal(func.call(this, a), period);\n    };\n  }\n\n  while (ordinalizeTokens.length) {\n    i = ordinalizeTokens.pop();\n    formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n  }\n\n  while (paddedTokens.length) {\n    i = paddedTokens.pop();\n    formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n  }\n\n  formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n  /************************************\n      Constructors\n  ************************************/\n\n  function Locale() {} // Moment prototype object\n\n\n  function Moment(config, skipOverflow) {\n    if (skipOverflow !== false) {\n      checkOverflow(config);\n    }\n\n    copyConfig(this, config);\n    this._d = new Date(+config._d);\n  } // Duration Constructor\n\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0; // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 36e5; // 1000 * 60 * 60\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = moment.localeData();\n\n    this._bubble();\n  }\n  /************************************\n      Helpers\n  ************************************/\n\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (typeof from._isAMomentObject !== 'undefined') {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (typeof from._i !== 'undefined') {\n      to._i = from._i;\n    }\n\n    if (typeof from._f !== 'undefined') {\n      to._f = from._f;\n    }\n\n    if (typeof from._l !== 'undefined') {\n      to._l = from._l;\n    }\n\n    if (typeof from._strict !== 'undefined') {\n      to._strict = from._strict;\n    }\n\n    if (typeof from._tzm !== 'undefined') {\n      to._tzm = from._tzm;\n    }\n\n    if (typeof from._isUTC !== 'undefined') {\n      to._isUTC = from._isUTC;\n    }\n\n    if (typeof from._offset !== 'undefined') {\n      to._offset = from._offset;\n    }\n\n    if (typeof from._pf !== 'undefined') {\n      to._pf = from._pf;\n    }\n\n    if (typeof from._locale !== 'undefined') {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i in momentProperties) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (typeof val !== 'undefined') {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  } // left zero fill a number\n  // see http://jsperf.com/left-zero-filling for performance comparison\n\n\n  function leftZeroFill(number, targetLength, forceSign) {\n    var output = '' + Math.abs(number),\n        sign = number >= 0;\n\n    while (output.length < targetLength) {\n      output = '0' + output;\n    }\n\n    return (sign ? forceSign ? '+' : '' : '-') + output;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {\n      milliseconds: 0,\n      months: 0\n    };\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n    other = makeAs(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = moment.duration(val, period);\n      addOrSubtractDurationFromMoment(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = duration._days,\n        months = duration._months;\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n      mom._d.setTime(+mom._d + milliseconds * isAdding);\n    }\n\n    if (days) {\n      rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n    }\n\n    if (months) {\n      rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n    }\n\n    if (updateOffset) {\n      moment.updateOffset(mom, days || months);\n    }\n  } // check if is an array\n\n\n  function isArray(input) {\n    return Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isDate(input) {\n    return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function normalizeUnits(units) {\n    if (units) {\n      var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n      units = unitAliases[units] || camelFunctions[lowered] || lowered;\n    }\n\n    return units;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  function makeList(field) {\n    var count, setter;\n\n    if (field.indexOf('week') === 0) {\n      count = 7;\n      setter = 'day';\n    } else if (field.indexOf('month') === 0) {\n      count = 12;\n      setter = 'month';\n    } else {\n      return;\n    }\n\n    moment[field] = function (format, index) {\n      var i,\n          getter,\n          method = moment._locale[field],\n          results = [];\n\n      if (typeof format === 'number') {\n        index = format;\n        format = undefined;\n      }\n\n      getter = function getter(i) {\n        var m = moment().utc().set(setter, i);\n        return method.call(moment._locale, m, format || '');\n      };\n\n      if (index != null) {\n        return getter(index);\n      } else {\n        for (i = 0; i < count; i++) {\n          results.push(getter(i));\n        }\n\n        return results;\n      }\n    };\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      if (coercedNumber >= 0) {\n        value = Math.floor(coercedNumber);\n      } else {\n        value = Math.ceil(coercedNumber);\n      }\n    }\n\n    return value;\n  }\n\n  function _daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n  }\n\n  function _weeksInYear(year, dow, doy) {\n    return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n  }\n\n  function daysInYear(year) {\n    return _isLeapYear(year) ? 366 : 365;\n  }\n\n  function _isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n\n    if (m._a && m._pf.overflow === -2) {\n      overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > _daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 24 || m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 || m._a[SECOND] !== 0 || m._a[MILLISECOND] !== 0) ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      m._pf.overflow = overflow;\n    }\n  }\n\n  function _isValid(m) {\n    if (m._isValid == null) {\n      m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;\n\n      if (m._strict) {\n        m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0 && m._pf.bigHour === undefined;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return null;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null;\n\n    if (!locales[name] && hasModule) {\n      try {\n        oldLocale = moment.locale();\n\n        require('./locale/' + name); // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n\n\n        moment.locale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function makeAs(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (moment.isMoment(input) || isDate(input) ? +input : +moment(input)) - +res; // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(+res._d + diff);\n\n      moment.updateOffset(res, false);\n      return res;\n    } else {\n      return moment(input).local();\n    }\n  }\n  /************************************\n      Locale\n  ************************************/\n\n\n  extend(Locale.prototype, {\n    set: function set(config) {\n      var prop, i;\n\n      for (i in config) {\n        prop = config[i];\n\n        if (typeof prop === 'function') {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      } // Lenient ordinal parsing accepts just a number in addition to\n      // number + (possibly) stuff coming from _ordinalParseLenient.\n\n\n      this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n    },\n    _months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    months: function months(m) {\n      return this._months[m.month()];\n    },\n    _monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    monthsShort: function monthsShort(m) {\n      return this._monthsShort[m.month()];\n    },\n    monthsParse: function monthsParse(monthName, format, strict) {\n      var i, mom, regex;\n\n      if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n      }\n\n      for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = moment.utc([2000, i]);\n\n        if (strict && !this._longMonthsParse[i]) {\n          this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n          this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n\n        if (!strict && !this._monthsParse[i]) {\n          regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n          this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        } // test the regex\n\n\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n          return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n          return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n          return i;\n        }\n      }\n    },\n    _weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdays: function weekdays(m) {\n      return this._weekdays[m.day()];\n    },\n    _weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysShort: function weekdaysShort(m) {\n      return this._weekdaysShort[m.day()];\n    },\n    _weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    weekdaysMin: function weekdaysMin(m) {\n      return this._weekdaysMin[m.day()];\n    },\n    weekdaysParse: function weekdaysParse(weekdayName) {\n      var i, mom, regex;\n\n      if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n      }\n\n      for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        if (!this._weekdaysParse[i]) {\n          mom = moment([2000, 1]).day(i);\n          regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n          this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        } // test the regex\n\n\n        if (this._weekdaysParse[i].test(weekdayName)) {\n          return i;\n        }\n      }\n    },\n    _longDateFormat: {\n      LTS: 'h:mm:ss A',\n      LT: 'h:mm A',\n      L: 'MM/DD/YYYY',\n      LL: 'MMMM D, YYYY',\n      LLL: 'MMMM D, YYYY LT',\n      LLLL: 'dddd, MMMM D, YYYY LT'\n    },\n    longDateFormat: function longDateFormat(key) {\n      var output = this._longDateFormat[key];\n\n      if (!output && this._longDateFormat[key.toUpperCase()]) {\n        output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n          return val.slice(1);\n        });\n        this._longDateFormat[key] = output;\n      }\n\n      return output;\n    },\n    isPM: function isPM(input) {\n      // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n      // Using charAt should be more compatible.\n      return (input + '').toLowerCase().charAt(0) === 'p';\n    },\n    _meridiemParse: /[ap]\\.?m?\\.?/i,\n    meridiem: function meridiem(hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n      } else {\n        return isLower ? 'am' : 'AM';\n      }\n    },\n    _calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    calendar: function calendar(key, mom, now) {\n      var output = this._calendar[key];\n      return typeof output === 'function' ? output.apply(mom, [now]) : output;\n    },\n    _relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    relativeTime: function relativeTime(number, withoutSuffix, string, isFuture) {\n      var output = this._relativeTime[string];\n      return typeof output === 'function' ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n    },\n    pastFuture: function pastFuture(diff, output) {\n      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n      return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n    },\n    ordinal: function ordinal(number) {\n      return this._ordinal.replace('%d', number);\n    },\n    _ordinal: '%d',\n    _ordinalParse: /\\d{1,2}/,\n    preparse: function preparse(string) {\n      return string;\n    },\n    postformat: function postformat(string) {\n      return string;\n    },\n    week: function week(mom) {\n      return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    },\n    _week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n    },\n    _invalidDate: 'Invalid date',\n    invalidDate: function invalidDate() {\n      return this._invalidDate;\n    }\n  });\n  /************************************\n      Formatting\n  ************************************/\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '';\n\n      for (i = 0; i < length; i++) {\n        output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n\n    if (!formatFunctions[format]) {\n      formatFunctions[format] = makeFormatFunction(format);\n    }\n\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n  /************************************\n      Parsing\n  ************************************/\n  // get the regex to find the next token\n\n\n  function getParseRegexForToken(token, config) {\n    var a,\n        strict = config._strict;\n\n    switch (token) {\n      case 'Q':\n        return parseTokenOneDigit;\n\n      case 'DDDD':\n        return parseTokenThreeDigits;\n\n      case 'YYYY':\n      case 'GGGG':\n      case 'gggg':\n        return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n\n      case 'Y':\n      case 'G':\n      case 'g':\n        return parseTokenSignedNumber;\n\n      case 'YYYYYY':\n      case 'YYYYY':\n      case 'GGGGG':\n      case 'ggggg':\n        return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n\n      case 'S':\n        if (strict) {\n          return parseTokenOneDigit;\n        }\n\n      /* falls through */\n\n      case 'SS':\n        if (strict) {\n          return parseTokenTwoDigits;\n        }\n\n      /* falls through */\n\n      case 'SSS':\n        if (strict) {\n          return parseTokenThreeDigits;\n        }\n\n      /* falls through */\n\n      case 'DDD':\n        return parseTokenOneToThreeDigits;\n\n      case 'MMM':\n      case 'MMMM':\n      case 'dd':\n      case 'ddd':\n      case 'dddd':\n        return parseTokenWord;\n\n      case 'a':\n      case 'A':\n        return config._locale._meridiemParse;\n\n      case 'x':\n        return parseTokenOffsetMs;\n\n      case 'X':\n        return parseTokenTimestampMs;\n\n      case 'Z':\n      case 'ZZ':\n        return parseTokenTimezone;\n\n      case 'T':\n        return parseTokenT;\n\n      case 'SSSS':\n        return parseTokenDigits;\n\n      case 'MM':\n      case 'DD':\n      case 'YY':\n      case 'GG':\n      case 'gg':\n      case 'HH':\n      case 'hh':\n      case 'mm':\n      case 'ss':\n      case 'ww':\n      case 'WW':\n        return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n\n      case 'M':\n      case 'D':\n      case 'd':\n      case 'H':\n      case 'h':\n      case 'm':\n      case 's':\n      case 'w':\n      case 'W':\n      case 'e':\n      case 'E':\n        return parseTokenOneOrTwoDigits;\n\n      case 'Do':\n        return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n\n      default:\n        a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n        return a;\n    }\n  }\n\n  function timezoneMinutesFromString(string) {\n    string = string || '';\n    var possibleTzMatches = string.match(parseTokenTimezone) || [],\n        tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n        parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return parts[0] === '+' ? -minutes : minutes;\n  } // function to convert string input to date\n\n\n  function addTimeToArrayFromToken(token, input, config) {\n    var a,\n        datePartArray = config._a;\n\n    switch (token) {\n      // QUARTER\n      case 'Q':\n        if (input != null) {\n          datePartArray[MONTH] = (toInt(input) - 1) * 3;\n        }\n\n        break;\n      // MONTH\n\n      case 'M': // fall through to MM\n\n      case 'MM':\n        if (input != null) {\n          datePartArray[MONTH] = toInt(input) - 1;\n        }\n\n        break;\n\n      case 'MMM': // fall through to MMMM\n\n      case 'MMMM':\n        a = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n        if (a != null) {\n          datePartArray[MONTH] = a;\n        } else {\n          config._pf.invalidMonth = input;\n        }\n\n        break;\n      // DAY OF MONTH\n\n      case 'D': // fall through to DD\n\n      case 'DD':\n        if (input != null) {\n          datePartArray[DATE] = toInt(input);\n        }\n\n        break;\n\n      case 'Do':\n        if (input != null) {\n          datePartArray[DATE] = toInt(parseInt(input.match(/\\d{1,2}/)[0], 10));\n        }\n\n        break;\n      // DAY OF YEAR\n\n      case 'DDD': // fall through to DDDD\n\n      case 'DDDD':\n        if (input != null) {\n          config._dayOfYear = toInt(input);\n        }\n\n        break;\n      // YEAR\n\n      case 'YY':\n        datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n        break;\n\n      case 'YYYY':\n      case 'YYYYY':\n      case 'YYYYYY':\n        datePartArray[YEAR] = toInt(input);\n        break;\n      // AM / PM\n\n      case 'a': // fall through to A\n\n      case 'A':\n        config._isPm = config._locale.isPM(input);\n        break;\n      // HOUR\n\n      case 'h': // fall through to hh\n\n      case 'hh':\n        config._pf.bigHour = true;\n\n      /* falls through */\n\n      case 'H': // fall through to HH\n\n      case 'HH':\n        datePartArray[HOUR] = toInt(input);\n        break;\n      // MINUTE\n\n      case 'm': // fall through to mm\n\n      case 'mm':\n        datePartArray[MINUTE] = toInt(input);\n        break;\n      // SECOND\n\n      case 's': // fall through to ss\n\n      case 'ss':\n        datePartArray[SECOND] = toInt(input);\n        break;\n      // MILLISECOND\n\n      case 'S':\n      case 'SS':\n      case 'SSS':\n      case 'SSSS':\n        datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n        break;\n      // UNIX OFFSET (MILLISECONDS)\n\n      case 'x':\n        config._d = new Date(toInt(input));\n        break;\n      // UNIX TIMESTAMP WITH MS\n\n      case 'X':\n        config._d = new Date(parseFloat(input) * 1000);\n        break;\n      // TIMEZONE\n\n      case 'Z': // fall through to ZZ\n\n      case 'ZZ':\n        config._useUTC = true;\n        config._tzm = timezoneMinutesFromString(input);\n        break;\n      // WEEKDAY - human\n\n      case 'dd':\n      case 'ddd':\n      case 'dddd':\n        a = config._locale.weekdaysParse(input); // if we didn't get a weekday name, mark the date as invalid\n\n        if (a != null) {\n          config._w = config._w || {};\n          config._w['d'] = a;\n        } else {\n          config._pf.invalidWeekday = input;\n        }\n\n        break;\n      // WEEK, WEEK DAY - numeric\n\n      case 'w':\n      case 'ww':\n      case 'W':\n      case 'WW':\n      case 'd':\n      case 'e':\n      case 'E':\n        token = token.substr(0, 1);\n\n      /* falls through */\n\n      case 'gggg':\n      case 'GGGG':\n      case 'GGGGG':\n        token = token.substr(0, 2);\n\n        if (input) {\n          config._w = config._w || {};\n          config._w[token] = toInt(input);\n        }\n\n        break;\n\n      case 'gg':\n      case 'GG':\n        config._w = config._w || {};\n        config._w[token] = moment.parseTwoDigitYear(input);\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n      week = dfl(w.W, 1);\n      weekday = dfl(w.E, 1);\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n      week = dfl(w.w, 1);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < dow) {\n          ++week;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from begining of week\n        weekday = w.e + dow;\n      } else {\n        // default to begining of week\n        weekday = dow;\n      }\n    }\n\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function dateFromConfig(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear) {\n      yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse)) {\n        config._pf._overflowDayOfYear = true;\n      }\n\n      date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input); // Apply timezone offset from input. The actual zone can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    }\n  }\n\n  function dateFromObject(config) {\n    var normalizedInput;\n\n    if (config._d) {\n      return;\n    }\n\n    normalizedInput = normalizeObjectUnits(config._i);\n    config._a = [normalizedInput.year, normalizedInput.month, normalizedInput.day || normalizedInput.date, normalizedInput.hour, normalizedInput.minute, normalizedInput.second, normalizedInput.millisecond];\n    dateFromConfig(config);\n  }\n\n  function currentDateArray(config) {\n    var now = new Date();\n\n    if (config._useUTC) {\n      return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n    } else {\n      return [now.getFullYear(), now.getMonth(), now.getDate()];\n    }\n  } // date from string and format string\n\n\n  function makeDateFromStringAndFormat(config) {\n    if (config._f === moment.ISO_8601) {\n      parseISO(config);\n      return;\n    }\n\n    config._a = [];\n    config._pf.empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          config._pf.unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          config._pf.empty = false;\n        } else {\n          config._pf.unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        config._pf.unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      config._pf.unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n      config._pf.bigHour = undefined;\n    } // handle am pm\n\n\n    if (config._isPm && config._a[HOUR] < 12) {\n      config._a[HOUR] += 12;\n    } // if is 12 am, change hours to 0\n\n\n    if (config._isPm === false && config._a[HOUR] === 12) {\n      config._a[HOUR] = 0;\n    }\n\n    dateFromConfig(config);\n    checkOverflow(config);\n  }\n\n  function unescapeFormat(s) {\n    return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    });\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function regexpEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  } // date from string and array of format strings\n\n\n  function makeDateFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      config._pf.invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._pf = defaultParsingFlags();\n      tempConfig._f = config._f[i];\n      makeDateFromStringAndFormat(tempConfig);\n\n      if (!_isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += tempConfig._pf.charsLeftOver; //or tokens\n\n      currentScore += tempConfig._pf.unusedTokens.length * 10;\n      tempConfig._pf.score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  } // date from iso format\n\n\n  function parseISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = isoRegex.exec(string);\n\n    if (match) {\n      config._pf.iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(string)) {\n          // match[5] should be 'T' or undefined\n          config._f = isoDates[i][0] + (match[6] || ' ');\n          break;\n        }\n      }\n\n      for (i = 0, l = isoTimes.length; i < l; i++) {\n        if (isoTimes[i][1].exec(string)) {\n          config._f += isoTimes[i][0];\n          break;\n        }\n      }\n\n      if (string.match(parseTokenTimezone)) {\n        config._f += 'Z';\n      }\n\n      makeDateFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function makeDateFromString(config) {\n    parseISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n      moment.createFromInputFallback(config);\n    }\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function makeDateFromInput(config) {\n    var input = config._i,\n        matched;\n\n    if (input === undefined) {\n      config._d = new Date();\n    } else if (isDate(input)) {\n      config._d = new Date(+input);\n    } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n      config._d = new Date(+matched[1]);\n    } else if (typeof input === 'string') {\n      makeDateFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      dateFromConfig(config);\n    } else if (typeof input === 'object') {\n      dateFromObject(config);\n    } else if (typeof input === 'number') {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      moment.createFromInputFallback(config);\n    }\n  }\n\n  function makeDate(y, m, d, h, M, s, ms) {\n    //can't just apply() to create a date:\n    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n    var date = new Date(y, m, d, h, M, s, ms); //the date constructor doesn't accept years < 1970\n\n    if (y < 1970) {\n      date.setFullYear(y);\n    }\n\n    return date;\n  }\n\n  function makeUTCDate(y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    if (y < 1970) {\n      date.setUTCFullYear(y);\n    }\n\n    return date;\n  }\n\n  function parseWeekday(input, locale) {\n    if (typeof input === 'string') {\n      if (!isNaN(input)) {\n        input = parseInt(input, 10);\n      } else {\n        input = locale.weekdaysParse(input);\n\n        if (typeof input !== 'number') {\n          return null;\n        }\n      }\n    }\n\n    return input;\n  }\n  /************************************\n      Relative Time\n  ************************************/\n  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime(posNegDuration, withoutSuffix, locale) {\n    var duration = moment.duration(posNegDuration).abs(),\n        seconds = round(duration.as('s')),\n        minutes = round(duration.as('m')),\n        hours = round(duration.as('h')),\n        days = round(duration.as('d')),\n        months = round(duration.as('M')),\n        years = round(duration.as('y')),\n        args = seconds < relativeTimeThresholds.s && ['s', seconds] || minutes === 1 && ['m'] || minutes < relativeTimeThresholds.m && ['mm', minutes] || hours === 1 && ['h'] || hours < relativeTimeThresholds.h && ['hh', hours] || days === 1 && ['d'] || days < relativeTimeThresholds.d && ['dd', days] || months === 1 && ['M'] || months < relativeTimeThresholds.M && ['MM', months] || years === 1 && ['y'] || ['yy', years];\n    args[2] = withoutSuffix;\n    args[3] = +posNegDuration > 0;\n    args[4] = locale;\n    return substituteTimeAgo.apply({}, args);\n  }\n  /************************************\n      Week of Year\n  ************************************/\n  // firstDayOfWeek       0 = sun, 6 = sat\n  //                      the day of the week that starts the week\n  //                      (usually sunday or monday)\n  // firstDayOfWeekOfYear 0 = sun, 6 = sat\n  //                      the first week is the week that contains the first\n  //                      of this day of the week\n  //                      (eg. ISO weeks use thursday (4))\n\n\n  function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n    var end = firstDayOfWeekOfYear - firstDayOfWeek,\n        daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n        adjustedMoment;\n\n    if (daysToDayOfWeek > end) {\n      daysToDayOfWeek -= 7;\n    }\n\n    if (daysToDayOfWeek < end - 7) {\n      daysToDayOfWeek += 7;\n    }\n\n    adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n    return {\n      week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n      year: adjustedMoment.year()\n    };\n  } //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n    var d = makeUTCDate(year, 0, 1).getUTCDay(),\n        daysToAdd,\n        dayOfYear;\n    d = d === 0 ? 7 : d;\n    weekday = weekday != null ? weekday : firstDayOfWeek;\n    daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n    dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n    return {\n      year: dayOfYear > 0 ? year : year - 1,\n      dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear\n    };\n  }\n  /************************************\n      Top Level Functions\n  ************************************/\n\n\n  function makeMoment(config) {\n    var input = config._i,\n        format = config._f,\n        res;\n    config._locale = config._locale || moment.localeData(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return moment.invalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (moment.isMoment(input)) {\n      return new Moment(input, true);\n    } else if (format) {\n      if (isArray(format)) {\n        makeDateFromStringAndArray(config);\n      } else {\n        makeDateFromStringAndFormat(config);\n      }\n    } else {\n      makeDateFromInput(config);\n    }\n\n    res = new Moment(config);\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  moment = function moment(input, format, locale, strict) {\n    var c;\n\n    if (typeof locale === 'boolean') {\n      strict = locale;\n      locale = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c = {};\n    c._isAMomentObject = true;\n    c._i = input;\n    c._f = format;\n    c._l = locale;\n    c._strict = strict;\n    c._isUTC = false;\n    c._pf = defaultParsingFlags();\n    return makeMoment(c);\n  };\n\n  moment.suppressDeprecationWarnings = false;\n  moment.createFromInputFallback = deprecate('moment construction falls back to js Date. This is ' + 'discouraged and will be removed in upcoming major ' + 'release. Please refer to ' + 'https://github.com/moment/moment/issues/1407 for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return moment();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  }\n\n  moment.min = function () {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  };\n\n  moment.max = function () {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }; // creating with utc\n\n\n  moment.utc = function (input, format, locale, strict) {\n    var c;\n\n    if (typeof locale === 'boolean') {\n      strict = locale;\n      locale = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c = {};\n    c._isAMomentObject = true;\n    c._useUTC = true;\n    c._isUTC = true;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    c._pf = defaultParsingFlags();\n    return makeMoment(c).utc();\n  }; // creating with unix timestamp (in seconds)\n\n\n  moment.unix = function (input) {\n    return moment(input * 1000);\n  }; // duration\n\n\n  moment.duration = function (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        parseIso,\n        diffRes;\n\n    if (moment.isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (typeof input === 'number') {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(match[MILLISECOND]) * sign\n      };\n    } else if (!!(match = isoDurationRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n\n      parseIso = function parseIso(inp) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n        return (isNaN(res) ? 0 : res) * sign;\n      };\n\n      duration = {\n        y: parseIso(match[2]),\n        M: parseIso(match[3]),\n        d: parseIso(match[4]),\n        h: parseIso(match[5]),\n        m: parseIso(match[6]),\n        s: parseIso(match[7]),\n        w: parseIso(match[8])\n      };\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }; // version number\n\n\n  moment.version = VERSION; // default format\n\n  moment.defaultFormat = isoFormat; // constant that refers to the ISO standard\n\n  moment.ISO_8601 = function () {}; // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  moment.momentProperties = momentProperties; // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n  moment.updateOffset = function () {}; // This function allows you to set a threshold for relative time strings\n\n\n  moment.relativeTimeThreshold = function (threshold, limit) {\n    if (relativeTimeThresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return relativeTimeThresholds[threshold];\n    }\n\n    relativeTimeThresholds[threshold] = limit;\n    return true;\n  };\n\n  moment.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', function (key, value) {\n    return moment.locale(key, value);\n  }); // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n  moment.locale = function (key, values) {\n    var data;\n\n    if (key) {\n      if (typeof values !== 'undefined') {\n        data = moment.defineLocale(key, values);\n      } else {\n        data = moment.localeData(key);\n      }\n\n      if (data) {\n        moment.duration._locale = moment._locale = data;\n      }\n    }\n\n    return moment._locale._abbr;\n  };\n\n  moment.defineLocale = function (name, values) {\n    if (values !== null) {\n      values.abbr = name;\n\n      if (!locales[name]) {\n        locales[name] = new Locale();\n      }\n\n      locales[name].set(values); // backwards compat for now: also set the locale\n\n      moment.locale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  };\n\n  moment.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', function (key) {\n    return moment.localeData(key);\n  }); // returns locale data\n\n  moment.localeData = function (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return moment._locale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }; // compare moment object\n\n\n  moment.isMoment = function (obj) {\n    return obj instanceof Moment || obj != null && hasOwnProp(obj, '_isAMomentObject');\n  }; // for typechecking Duration objects\n\n\n  moment.isDuration = function (obj) {\n    return obj instanceof Duration;\n  };\n\n  for (i = lists.length - 1; i >= 0; --i) {\n    makeList(lists[i]);\n  }\n\n  moment.normalizeUnits = function (units) {\n    return normalizeUnits(units);\n  };\n\n  moment.invalid = function (flags) {\n    var m = moment.utc(NaN);\n\n    if (flags != null) {\n      extend(m._pf, flags);\n    } else {\n      m._pf.userInvalidated = true;\n    }\n\n    return m;\n  };\n\n  moment.parseZone = function () {\n    return moment.apply(null, arguments).parseZone();\n  };\n\n  moment.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  };\n  /************************************\n      Moment Prototype\n  ************************************/\n\n\n  extend(moment.fn = Moment.prototype, {\n    clone: function clone() {\n      return moment(this);\n    },\n    valueOf: function valueOf() {\n      return +this._d + (this._offset || 0) * 60000;\n    },\n    unix: function unix() {\n      return Math.floor(+this / 1000);\n    },\n    toString: function toString() {\n      return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    },\n    toDate: function toDate() {\n      return this._offset ? new Date(+this) : this._d;\n    },\n    toISOString: function toISOString() {\n      var m = moment(this).utc();\n\n      if (0 < m.year() && m.year() <= 9999) {\n        if ('function' === typeof Date.prototype.toISOString) {\n          // native implementation is ~50x faster, use it when we can\n          return this.toDate().toISOString();\n        } else {\n          return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n      } else {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n      }\n    },\n    toArray: function toArray() {\n      var m = this;\n      return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];\n    },\n    isValid: function isValid() {\n      return _isValid(this);\n    },\n    isDSTShifted: function isDSTShifted() {\n      if (this._a) {\n        return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n      }\n\n      return false;\n    },\n    parsingFlags: function parsingFlags() {\n      return extend({}, this._pf);\n    },\n    invalidAt: function invalidAt() {\n      return this._pf.overflow;\n    },\n    utc: function utc(keepLocalTime) {\n      return this.zone(0, keepLocalTime);\n    },\n    local: function local(keepLocalTime) {\n      if (this._isUTC) {\n        this.zone(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n          this.add(this._dateTzOffset(), 'm');\n        }\n      }\n\n      return this;\n    },\n    format: function format(inputString) {\n      var output = formatMoment(this, inputString || moment.defaultFormat);\n      return this.localeData().postformat(output);\n    },\n    add: createAdder(1, 'add'),\n    subtract: createAdder(-1, 'subtract'),\n    diff: function diff(input, units, asFloat) {\n      var that = makeAs(input, this),\n          zoneDiff = (this.zone() - that.zone()) * 6e4,\n          diff,\n          output,\n          daysAdjust;\n      units = normalizeUnits(units);\n\n      if (units === 'year' || units === 'month') {\n        // average number of days in the months in the given dates\n        diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n        // difference in months\n\n        output = (this.year() - that.year()) * 12 + (this.month() - that.month()); // adjust by taking difference in days, average number of days\n        // and dst in the given months.\n\n        daysAdjust = this - moment(this).startOf('month') - (that - moment(that).startOf('month')); // same as above but with zones, to negate all dst\n\n        daysAdjust -= (this.zone() - moment(this).startOf('month').zone() - (that.zone() - moment(that).startOf('month').zone())) * 6e4;\n        output += daysAdjust / diff;\n\n        if (units === 'year') {\n          output = output / 12;\n        }\n      } else {\n        diff = this - that;\n        output = units === 'second' ? diff / 1e3 : // 1000\n        units === 'minute' ? diff / 6e4 : // 1000 * 60\n        units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n        units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n        units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n        diff;\n      }\n\n      return asFloat ? output : absRound(output);\n    },\n    from: function from(time, withoutSuffix) {\n      return moment.duration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    },\n    fromNow: function fromNow(withoutSuffix) {\n      return this.from(moment(), withoutSuffix);\n    },\n    calendar: function calendar(time) {\n      // We want to compare the start of today, vs this.\n      // Getting start-of-today depends on whether we're zone'd or not.\n      var now = time || moment(),\n          sod = makeAs(now, this).startOf('day'),\n          diff = this.diff(sod, 'days', true),\n          format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n      return this.format(this.localeData().calendar(format, this, moment(now)));\n    },\n    isLeapYear: function isLeapYear() {\n      return _isLeapYear(this.year());\n    },\n    isDST: function isDST() {\n      return this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone();\n    },\n    day: function day(input) {\n      var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n      if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n      } else {\n        return day;\n      }\n    },\n    month: makeAccessor('Month', true),\n    startOf: function startOf(units) {\n      units = normalizeUnits(units); // the following switch intentionally omits break keywords\n      // to utilize falling through the cases.\n\n      switch (units) {\n        case 'year':\n          this.month(0);\n\n        /* falls through */\n\n        case 'quarter':\n        case 'month':\n          this.date(1);\n\n        /* falls through */\n\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n          this.hours(0);\n\n        /* falls through */\n\n        case 'hour':\n          this.minutes(0);\n\n        /* falls through */\n\n        case 'minute':\n          this.seconds(0);\n\n        /* falls through */\n\n        case 'second':\n          this.milliseconds(0);\n\n        /* falls through */\n      } // weeks are a special case\n\n\n      if (units === 'week') {\n        this.weekday(0);\n      } else if (units === 'isoWeek') {\n        this.isoWeekday(1);\n      } // quarters are also special\n\n\n      if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n      }\n\n      return this;\n    },\n    endOf: function endOf(units) {\n      units = normalizeUnits(units);\n\n      if (units === undefined || units === 'millisecond') {\n        return this;\n      }\n\n      return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');\n    },\n    isAfter: function isAfter(input, units) {\n      var inputMs;\n      units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n\n      if (units === 'millisecond') {\n        input = moment.isMoment(input) ? input : moment(input);\n        return +this > +input;\n      } else {\n        inputMs = moment.isMoment(input) ? +input : +moment(input);\n        return inputMs < +this.clone().startOf(units);\n      }\n    },\n    isBefore: function isBefore(input, units) {\n      var inputMs;\n      units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n\n      if (units === 'millisecond') {\n        input = moment.isMoment(input) ? input : moment(input);\n        return +this < +input;\n      } else {\n        inputMs = moment.isMoment(input) ? +input : +moment(input);\n        return +this.clone().endOf(units) < inputMs;\n      }\n    },\n    isSame: function isSame(input, units) {\n      var inputMs;\n      units = normalizeUnits(units || 'millisecond');\n\n      if (units === 'millisecond') {\n        input = moment.isMoment(input) ? input : moment(input);\n        return +this === +input;\n      } else {\n        inputMs = +moment(input);\n        return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);\n      }\n    },\n    min: deprecate('moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548', function (other) {\n      other = moment.apply(null, arguments);\n      return other < this ? this : other;\n    }),\n    max: deprecate('moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548', function (other) {\n      other = moment.apply(null, arguments);\n      return other > this ? this : other;\n    }),\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    zone: function zone(input, keepLocalTime) {\n      var offset = this._offset || 0,\n          localAdjust;\n\n      if (input != null) {\n        if (typeof input === 'string') {\n          input = timezoneMinutesFromString(input);\n        }\n\n        if (Math.abs(input) < 16) {\n          input = input * 60;\n        }\n\n        if (!this._isUTC && keepLocalTime) {\n          localAdjust = this._dateTzOffset();\n        }\n\n        this._offset = input;\n        this._isUTC = true;\n\n        if (localAdjust != null) {\n          this.subtract(localAdjust, 'm');\n        }\n\n        if (offset !== input) {\n          if (!keepLocalTime || this._changeInProgress) {\n            addOrSubtractDurationFromMoment(this, moment.duration(offset - input, 'm'), 1, false);\n          } else if (!this._changeInProgress) {\n            this._changeInProgress = true;\n            moment.updateOffset(this, true);\n            this._changeInProgress = null;\n          }\n        }\n      } else {\n        return this._isUTC ? offset : this._dateTzOffset();\n      }\n\n      return this;\n    },\n    zoneAbbr: function zoneAbbr() {\n      return this._isUTC ? 'UTC' : '';\n    },\n    zoneName: function zoneName() {\n      return this._isUTC ? 'Coordinated Universal Time' : '';\n    },\n    parseZone: function parseZone() {\n      if (this._tzm) {\n        this.zone(this._tzm);\n      } else if (typeof this._i === 'string') {\n        this.zone(this._i);\n      }\n\n      return this;\n    },\n    hasAlignedHourOffset: function hasAlignedHourOffset(input) {\n      if (!input) {\n        input = 0;\n      } else {\n        input = moment(input).zone();\n      }\n\n      return (this.zone() - input) % 60 === 0;\n    },\n    daysInMonth: function daysInMonth() {\n      return _daysInMonth(this.year(), this.month());\n    },\n    dayOfYear: function dayOfYear(input) {\n      var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n      return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    },\n    quarter: function quarter(input) {\n      return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    },\n    weekYear: function weekYear(input) {\n      var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n      return input == null ? year : this.add(input - year, 'y');\n    },\n    isoWeekYear: function isoWeekYear(input) {\n      var year = weekOfYear(this, 1, 4).year;\n      return input == null ? year : this.add(input - year, 'y');\n    },\n    week: function week(input) {\n      var week = this.localeData().week(this);\n      return input == null ? week : this.add((input - week) * 7, 'd');\n    },\n    isoWeek: function isoWeek(input) {\n      var week = weekOfYear(this, 1, 4).week;\n      return input == null ? week : this.add((input - week) * 7, 'd');\n    },\n    weekday: function weekday(input) {\n      var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n      return input == null ? weekday : this.add(input - weekday, 'd');\n    },\n    isoWeekday: function isoWeekday(input) {\n      // behaves the same as moment#day except\n      // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n      // as a setter, sunday should belong to the previous week.\n      return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    },\n    isoWeeksInYear: function isoWeeksInYear() {\n      return _weeksInYear(this.year(), 1, 4);\n    },\n    weeksInYear: function weeksInYear() {\n      var weekInfo = this.localeData()._week;\n\n      return _weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    },\n    get: function get(units) {\n      units = normalizeUnits(units);\n      return this[units]();\n    },\n    set: function set(units, value) {\n      units = normalizeUnits(units);\n\n      if (typeof this[units] === 'function') {\n        this[units](value);\n      }\n\n      return this;\n    },\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    locale: function locale(key) {\n      var newLocaleData;\n\n      if (key === undefined) {\n        return this._locale._abbr;\n      } else {\n        newLocaleData = moment.localeData(key);\n\n        if (newLocaleData != null) {\n          this._locale = newLocaleData;\n        }\n\n        return this;\n      }\n    },\n    lang: deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n      if (key === undefined) {\n        return this.localeData();\n      } else {\n        return this.locale(key);\n      }\n    }),\n    localeData: function localeData() {\n      return this._locale;\n    },\n    _dateTzOffset: function _dateTzOffset() {\n      // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n      // https://github.com/moment/moment/pull/1871\n      return Math.round(this._d.getTimezoneOffset() / 15) * 15;\n    }\n  });\n\n  function rawMonthSetter(mom, value) {\n    var dayOfMonth; // TODO: Move this out of here!\n\n    if (typeof value === 'string') {\n      value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n      if (typeof value !== 'number') {\n        return mom;\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), _daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function rawGetter(mom, unit) {\n    return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n  }\n\n  function rawSetter(mom, unit, value) {\n    if (unit === 'Month') {\n      return rawMonthSetter(mom, value);\n    } else {\n      return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n  }\n\n  function makeAccessor(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        rawSetter(this, unit, value);\n        moment.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return rawGetter(this, unit);\n      }\n    };\n  }\n\n  moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n  moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n  moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false); // Setting the hour should keep the time, because the user explicitly\n  // specified which hour he wants. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n  moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true); // moment.fn.month is defined separately\n\n  moment.fn.date = makeAccessor('Date', true);\n  moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n  moment.fn.year = makeAccessor('FullYear', true);\n  moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true)); // add plural methods\n\n  moment.fn.days = moment.fn.day;\n  moment.fn.months = moment.fn.month;\n  moment.fn.weeks = moment.fn.week;\n  moment.fn.isoWeeks = moment.fn.isoWeek;\n  moment.fn.quarters = moment.fn.quarter; // add aliased format methods\n\n  moment.fn.toJSON = moment.fn.toISOString;\n  /************************************\n      Duration Prototype\n  ************************************/\n\n  function daysToYears(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n  }\n\n  function yearsToDays(years) {\n    // years * 365 + absRound(years / 4) -\n    //     absRound(years / 100) + absRound(years / 400);\n    return years * 146097 / 400;\n  }\n\n  extend(moment.duration.fn = Duration.prototype, {\n    _bubble: function _bubble() {\n      var milliseconds = this._milliseconds,\n          days = this._days,\n          months = this._months,\n          data = this._data,\n          seconds,\n          minutes,\n          hours,\n          years = 0; // The following code bubbles up values, see the tests for\n      // examples of what that means.\n\n      data.milliseconds = milliseconds % 1000;\n      seconds = absRound(milliseconds / 1000);\n      data.seconds = seconds % 60;\n      minutes = absRound(seconds / 60);\n      data.minutes = minutes % 60;\n      hours = absRound(minutes / 60);\n      data.hours = hours % 24;\n      days += absRound(hours / 24); // Accurately convert days to years, assume start from year 0.\n\n      years = absRound(daysToYears(days));\n      days -= absRound(yearsToDays(years)); // 30 days to a month\n      // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n\n      months += absRound(days / 30);\n      days %= 30; // 12 months -> 1 year\n\n      years += absRound(months / 12);\n      months %= 12;\n      data.days = days;\n      data.months = months;\n      data.years = years;\n    },\n    abs: function abs() {\n      this._milliseconds = Math.abs(this._milliseconds);\n      this._days = Math.abs(this._days);\n      this._months = Math.abs(this._months);\n      this._data.milliseconds = Math.abs(this._data.milliseconds);\n      this._data.seconds = Math.abs(this._data.seconds);\n      this._data.minutes = Math.abs(this._data.minutes);\n      this._data.hours = Math.abs(this._data.hours);\n      this._data.months = Math.abs(this._data.months);\n      this._data.years = Math.abs(this._data.years);\n      return this;\n    },\n    weeks: function weeks() {\n      return absRound(this.days() / 7);\n    },\n    valueOf: function valueOf() {\n      return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n    },\n    humanize: function humanize(withSuffix) {\n      var output = relativeTime(this, !withSuffix, this.localeData());\n\n      if (withSuffix) {\n        output = this.localeData().pastFuture(+this, output);\n      }\n\n      return this.localeData().postformat(output);\n    },\n    add: function add(input, val) {\n      // supports only 2.0-style add(1, 's') or add(moment)\n      var dur = moment.duration(input, val);\n      this._milliseconds += dur._milliseconds;\n      this._days += dur._days;\n      this._months += dur._months;\n\n      this._bubble();\n\n      return this;\n    },\n    subtract: function subtract(input, val) {\n      var dur = moment.duration(input, val);\n      this._milliseconds -= dur._milliseconds;\n      this._days -= dur._days;\n      this._months -= dur._months;\n\n      this._bubble();\n\n      return this;\n    },\n    get: function get(units) {\n      units = normalizeUnits(units);\n      return this[units.toLowerCase() + 's']();\n    },\n    as: function as(units) {\n      var days, months;\n      units = normalizeUnits(units);\n\n      if (units === 'month' || units === 'year') {\n        days = this._days + this._milliseconds / 864e5;\n        months = this._months + daysToYears(days) * 12;\n        return units === 'month' ? months : months / 12;\n      } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(yearsToDays(this._months / 12));\n\n        switch (units) {\n          case 'week':\n            return days / 7 + this._milliseconds / 6048e5;\n\n          case 'day':\n            return days + this._milliseconds / 864e5;\n\n          case 'hour':\n            return days * 24 + this._milliseconds / 36e5;\n\n          case 'minute':\n            return days * 24 * 60 + this._milliseconds / 6e4;\n\n          case 'second':\n            return days * 24 * 60 * 60 + this._milliseconds / 1000;\n          // Math.floor prevents floating point math errors here\n\n          case 'millisecond':\n            return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n\n          default:\n            throw new Error('Unknown unit ' + units);\n        }\n      }\n    },\n    lang: moment.fn.lang,\n    locale: moment.fn.locale,\n    toIsoString: deprecate('toIsoString() is deprecated. Please use toISOString() instead ' + '(notice the capitals)', function () {\n      return this.toISOString();\n    }),\n    toISOString: function toISOString() {\n      // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n      var years = Math.abs(this.years()),\n          months = Math.abs(this.months()),\n          days = Math.abs(this.days()),\n          hours = Math.abs(this.hours()),\n          minutes = Math.abs(this.minutes()),\n          seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n      if (!this.asSeconds()) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n      }\n\n      return (this.asSeconds() < 0 ? '-' : '') + 'P' + (years ? years + 'Y' : '') + (months ? months + 'M' : '') + (days ? days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hours + 'H' : '') + (minutes ? minutes + 'M' : '') + (seconds ? seconds + 'S' : '');\n    },\n    localeData: function localeData() {\n      return this._locale;\n    }\n  });\n  moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n  function makeDurationGetter(name) {\n    moment.duration.fn[name] = function () {\n      return this._data[name];\n    };\n  }\n\n  for (i in unitMillisecondFactors) {\n    if (hasOwnProp(unitMillisecondFactors, i)) {\n      makeDurationGetter(i.toLowerCase());\n    }\n  }\n\n  moment.duration.fn.asMilliseconds = function () {\n    return this.as('ms');\n  };\n\n  moment.duration.fn.asSeconds = function () {\n    return this.as('s');\n  };\n\n  moment.duration.fn.asMinutes = function () {\n    return this.as('m');\n  };\n\n  moment.duration.fn.asHours = function () {\n    return this.as('h');\n  };\n\n  moment.duration.fn.asDays = function () {\n    return this.as('d');\n  };\n\n  moment.duration.fn.asWeeks = function () {\n    return this.as('weeks');\n  };\n\n  moment.duration.fn.asMonths = function () {\n    return this.as('M');\n  };\n\n  moment.duration.fn.asYears = function () {\n    return this.as('y');\n  };\n  /************************************\n      Default Locale\n  ************************************/\n  // Set default locale, other locale will inherit from English.\n\n\n  moment.locale('en', {\n    ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  });\n  /* EMBED_LOCALES */\n\n  /************************************\n      Exposing Moment\n  ************************************/\n\n  function makeGlobal(shouldDeprecate) {\n    /*global ender:false */\n    if (typeof ender !== 'undefined') {\n      return;\n    }\n\n    oldGlobalMoment = globalScope.moment;\n\n    if (shouldDeprecate) {\n      globalScope.moment = deprecate('Accessing Moment through the global scope is ' + 'deprecated, and will be removed in an upcoming ' + 'release.', moment);\n    } else {\n      globalScope.moment = moment;\n    }\n  } // CommonJS module is defined\n\n\n  if (hasModule) {\n    module.exports = moment;\n  } else if (typeof define === 'function' && define.amd) {\n    define('moment', function (require, exports, module) {\n      if (module.config && module.config() && module.config().noGlobal === true) {\n        // release the global variable\n        globalScope.moment = oldGlobalMoment;\n      }\n\n      return moment;\n    });\n    makeGlobal(true);\n  } else {\n    makeGlobal();\n  }\n}).call(this);","map":{"version":3,"sources":["/Users/DanielCalise/Desktop/repos/stay-emo-forever/SEF/stay-emo-forever/stay-emo-forever/exp-app/node_modules/moment/moment.js"],"names":["undefined","moment","VERSION","globalScope","global","oldGlobalMoment","round","Math","hasOwnProperty","Object","prototype","i","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","locales","momentProperties","hasModule","module","exports","aspNetJsonRegex","aspNetTimeSpanJsonRegex","isoDurationRegex","formattingTokens","localFormattingTokens","parseTokenOneOrTwoDigits","parseTokenOneToThreeDigits","parseTokenOneToFourDigits","parseTokenOneToSixDigits","parseTokenDigits","parseTokenWord","parseTokenTimezone","parseTokenT","parseTokenOffsetMs","parseTokenTimestampMs","parseTokenOneDigit","parseTokenTwoDigits","parseTokenThreeDigits","parseTokenFourDigits","parseTokenSixDigits","parseTokenSignedNumber","isoRegex","isoFormat","isoDates","isoTimes","parseTimezoneChunker","proxyGettersAndSetters","split","unitMillisecondFactors","unitAliases","ms","s","m","h","d","D","w","W","M","Q","y","DDD","e","E","gg","GG","camelFunctions","dayofyear","isoweekday","isoweek","weekyear","isoweekyear","formatFunctions","relativeTimeThresholds","ordinalizeTokens","paddedTokens","formatTokenFunctions","month","MMM","format","localeData","monthsShort","MMMM","months","date","dayOfYear","day","dd","weekdaysMin","ddd","weekdaysShort","dddd","weekdays","week","isoWeek","YY","leftZeroFill","year","YYYY","YYYYY","YYYYYY","sign","abs","weekYear","gggg","ggggg","isoWeekYear","GGGG","GGGGG","weekday","isoWeekday","a","meridiem","hours","minutes","A","H","seconds","S","toInt","milliseconds","SS","SSS","SSSS","Z","zone","b","ZZ","z","zoneAbbr","zz","zoneName","x","valueOf","X","unix","quarter","deprecations","lists","dfl","c","arguments","length","Error","hasOwnProp","call","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","printMsg","msg","suppressDeprecationWarnings","console","warn","deprecate","fn","firstTime","extend","apply","deprecateSimple","name","padToken","func","count","ordinalizeToken","period","ordinal","pop","DDDD","Locale","Moment","config","skipOverflow","checkOverflow","copyConfig","_d","Date","Duration","duration","normalizedInput","normalizeObjectUnits","years","quarters","weeks","days","hour","minute","second","millisecond","_milliseconds","_days","_months","_data","_locale","_bubble","toString","to","from","prop","val","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","absRound","number","ceil","floor","targetLength","forceSign","output","positiveMomentsDifference","base","other","res","clone","add","isAfter","momentsDifference","makeAs","isBefore","createAdder","direction","dur","tmp","isNaN","addOrSubtractDurationFromMoment","mom","isAdding","updateOffset","setTime","rawSetter","rawGetter","rawMonthSetter","isArray","input","isDate","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","diffs","normalizeUnits","units","lowered","toLowerCase","replace","inputObject","normalizedProp","makeList","field","setter","indexOf","index","getter","method","results","utc","set","push","argumentForCoercion","coercedNumber","value","isFinite","daysInMonth","UTC","getUTCDate","weeksInYear","dow","doy","weekOfYear","daysInYear","isLeapYear","_a","_overflowDayOfYear","isValid","_isValid","getTime","bigHour","normalizeLocale","key","chooseLocale","names","j","next","locale","loadLocale","slice","join","oldLocale","require","model","diff","isMoment","local","_ordinalParseLenient","RegExp","_ordinalParse","source","_monthsShort","monthsParse","monthName","strict","regex","_monthsParse","_longMonthsParse","_shortMonthsParse","test","_weekdays","_weekdaysShort","_weekdaysMin","weekdaysParse","weekdayName","_weekdaysParse","_longDateFormat","LTS","LT","L","LL","LLL","LLLL","longDateFormat","toUpperCase","isPM","charAt","_meridiemParse","isLower","_calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","now","_relativeTime","future","past","mm","hh","MM","yy","relativeTime","withoutSuffix","string","isFuture","pastFuture","_ordinal","preparse","postformat","_week","_invalidDate","invalidDate","removeFormattingTokens","match","makeFormatFunction","array","Function","formatMoment","expandFormat","replaceLongDateFormatTokens","lastIndex","getParseRegexForToken","token","regexpEscape","unescapeFormat","timezoneMinutesFromString","possibleTzMatches","tzChunk","parts","addTimeToArrayFromToken","datePartArray","parseInt","_dayOfYear","parseTwoDigitYear","_isPm","parseFloat","_useUTC","_w","invalidWeekday","substr","dayOfYearFromWeekInfo","temp","dayOfYearFromWeeks","dateFromConfig","currentDate","yearToUse","currentDateArray","makeUTCDate","getUTCMonth","_nextDay","makeDate","setUTCMinutes","getUTCMinutes","dateFromObject","getUTCFullYear","getFullYear","getMonth","getDate","makeDateFromStringAndFormat","ISO_8601","parseISO","parsedInput","tokens","skipped","stringLength","totalParsedInputLength","matched","p1","p2","p3","p4","makeDateFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","NaN","score","l","exec","makeDateFromString","createFromInputFallback","map","arr","makeDateFromInput","obj","setFullYear","setUTCFullYear","parseWeekday","substituteTimeAgo","posNegDuration","as","args","firstDayOfWeek","firstDayOfWeekOfYear","end","daysToDayOfWeek","adjustedMoment","getUTCDay","daysToAdd","makeMoment","invalid","pickBy","moments","max","ret","parseIso","diffRes","isDuration","inp","version","defaultFormat","relativeTimeThreshold","threshold","limit","lang","values","data","defineLocale","_abbr","abbr","langData","flags","parseZone","toDate","toISOString","toArray","isDSTShifted","parsingFlags","invalidAt","keepLocalTime","_dateTzOffset","inputString","subtract","asFloat","that","zoneDiff","daysAdjust","startOf","time","humanize","fromNow","sod","isDST","getDay","makeAccessor","endOf","inputMs","isSame","offset","localAdjust","_changeInProgress","hasAlignedHourOffset","isoWeeksInYear","weekInfo","get","newLocaleData","getTimezoneOffset","dayOfMonth","unit","keepTime","dates","isoWeeks","toJSON","daysToYears","yearsToDays","withSuffix","toIsoString","asSeconds","makeDurationGetter","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","ordinalParse","makeGlobal","shouldDeprecate","ender","define","amd","noGlobal"],"mappings":"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","sourcesContent":["//! moment.js\n//! version : 2.8.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.8.4',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = typeof global !== 'undefined' ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function timezoneMinutesFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? -minutes : minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = timezoneMinutesFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual zone can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle am pm\n        if (config._isPm && config._a[HOUR] < 12) {\n            config._a[HOUR] += 12;\n        }\n        // if is 12 am, change hours to 0\n        if (config._isPm === false && config._a[HOUR] === 12) {\n            config._a[HOUR] = 0;\n        }\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d + ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.zone(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.zone(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.add(this._dateTzOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (this.zone() - that.zone()) * 6e4,\n                diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month') {\n                // average number of days in the months in the given dates\n                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                // difference in months\n                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                // adjust by taking difference in days, average number of days\n                // and dst in the given months.\n                daysAdjust = (this - moment(this).startOf('month')) -\n                    (that - moment(that).startOf('month'));\n                // same as above but with zones, to negate all dst\n                daysAdjust -= ((this.zone() - moment(this).startOf('month').zone()) -\n                        (that.zone() - moment(that).startOf('month').zone())) * 6e4;\n                output += daysAdjust / diff;\n                if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = (this - that);\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're zone'd or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.zone() < this.clone().month(0).zone() ||\n                this.zone() < this.clone().month(5).zone());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        zone : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = timezoneMinutesFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateTzOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.subtract(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(offset - input, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n            } else {\n                return this._isUTC ? offset : this._dateTzOffset();\n            }\n            return this;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.zone(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.zone(this._i);\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).zone();\n            }\n\n            return (this.zone() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                this[units](value);\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateTzOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define('moment', function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}